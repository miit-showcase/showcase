/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records


import jooq.tables.Customer

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class CustomerRecord() : UpdatableRecordImpl<CustomerRecord>(Customer.CUSTOMER) {

    open var uuid: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var revision: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var idempotencytoken: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var firstname: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var lastname: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var patronymic: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    /**
     * Create a detached, initialised CustomerRecord
     */
    constructor(uuid: String? = null, revision: Int? = null, idempotencytoken: String? = null, firstname: String? = null, lastname: String? = null, patronymic: String? = null): this() {
        this.uuid = uuid
        this.revision = revision
        this.idempotencytoken = idempotencytoken
        this.firstname = firstname
        this.lastname = lastname
        this.patronymic = patronymic
        resetTouchedOnNotNull()
    }
}
