/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records


import java.time.LocalDate

import jooq.tables.Project

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class ProjectRecord() : UpdatableRecordImpl<ProjectRecord>(Project.PROJECT) {

    open var uuid: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var revision: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var customerId: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var title: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var goal: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var projectBarrier: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var alternativeSolutions: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var projectType: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var institute: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var department: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var addedBy: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    open var addedDate: LocalDate?
        set(value): Unit = set(11, value)
        get(): LocalDate? = get(11) as LocalDate?

    open var updatedDate: LocalDate?
        set(value): Unit = set(12, value)
        get(): LocalDate? = get(12) as LocalDate?

    open var deletedDate: LocalDate?
        set(value): Unit = set(13, value)
        get(): LocalDate? = get(13) as LocalDate?

    open var projectStatus: String?
        set(value): Unit = set(14, value)
        get(): String? = get(14) as String?

    open var idempotencyToken: String?
        set(value): Unit = set(15, value)
        get(): String? = get(15) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    /**
     * Create a detached, initialised ProjectRecord
     */
    constructor(uuid: String? = null, revision: Int? = null, customerId: String? = null, title: String? = null, goal: String? = null, projectBarrier: String? = null, alternativeSolutions: String? = null, projectType: String? = null, institute: String? = null, department: String? = null, addedBy: String? = null, addedDate: LocalDate? = null, updatedDate: LocalDate? = null, deletedDate: LocalDate? = null, projectStatus: String? = null, idempotencyToken: String? = null): this() {
        this.uuid = uuid
        this.revision = revision
        this.customerId = customerId
        this.title = title
        this.goal = goal
        this.projectBarrier = projectBarrier
        this.alternativeSolutions = alternativeSolutions
        this.projectType = projectType
        this.institute = institute
        this.department = department
        this.addedBy = addedBy
        this.addedDate = addedDate
        this.updatedDate = updatedDate
        this.deletedDate = deletedDate
        this.projectStatus = projectStatus
        this.idempotencyToken = idempotencyToken
        resetTouchedOnNotNull()
    }
}
